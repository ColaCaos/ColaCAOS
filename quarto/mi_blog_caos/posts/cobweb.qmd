---
title: "Diagrama Cobweb Interactivo"
jupyter: python3
format:
  html:
    math: katex
execute:
  enabled: true
---

## Diagrama Cobweb Interactivo

Ajusta el parámetro *r* con el deslizador y observa cómo cambia el diagrama:

```{python}
import numpy as np
import plotly.graph_objects as go

# Función que construye el diagrama cobweb para un valor de r
def make_cobweb(r, x0=0.2, steps=40):
    xs = np.linspace(0, 1, 200)
    ys = r * xs * (1 - xs)
    fig = go.Figure([
        go.Scatter(x=xs, y=ys, mode='lines', name='f(x)=r·x(1−x)'),
        go.Scatter(x=xs, y=xs, mode='lines', name='y=x', line=dict(dash='dash'))
    ])
    x, y = x0, x0
    xc, yc = [x], [y]
    for _ in range(steps):
        y = r * x * (1 - x)
        xc += [x, x]; yc += [x, y]
        x = y
        xc += [x]; yc += [y]
    fig.add_trace(go.Scatter(x=xc, y=yc, mode='lines', name='Cobweb', line=dict(color='red')))
    return fig

# Crear frames para el slider
rs = np.linspace(2.5, 4.0, 31)
frames = [go.Frame(data=make_cobweb(r).data, name=f"{r:.2f}") for r in rs]

# Figura base y asignación de frames
fig = make_cobweb(rs[0])
fig.frames = frames

# Configuración del slider
steps = [dict(label=f"{r:.2f}", method="animate",
              args=[[f"{r:.2f}"], dict(mode="immediate",
                                           frame=dict(duration=0, redraw=True),
                                           transition=dict(duration=0))])
         for r in rs]

fig.update_layout(
    updatemenus=[dict(type="buttons", showactive=False, y=1, x=1.1,
                      xanchor="right", yanchor="top", pad=dict(t=0, r=10),
                      buttons=[dict(label="Play", method="animate",
                                    args=[None, dict(frame=dict(duration=100, redraw=True), fromcurrent=True)])])],
    sliders=[dict(active=0, pad=dict(t=60), steps=steps)],
    xaxis=dict(range=[0,1]), yaxis=dict(range=[0,1]),
    width=600, height=600
)

fig.show()
```
